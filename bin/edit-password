#!/bin/bash
set -e
set -o nounset

usage() {
    cat >&2 <<EOM
usage: $(basename "$0") [options] password

Fetch a password from password vault, open it with your \$EDITOR, and save
any changes back to password vault with the same recipients.

options: passed directly to fetch-password and add-password

NOTE: You should really really be using full disk encryption.
EOM
}

if [ $# -lt 1 ]; then
    usage
    exit 1
fi

if [ "$1" = "-h" -o "$1" = "--help" ]; then
    usage
    exit 0
fi

os_shred() {
    if [ $# -lt 1 ]; then
        echo >&2 "cleanup FILE"
        exit 7
    fi
    file="$1"

    case $OSTYPE in
        linux-gnu)
            echo >&2 "+ shred -uv '$file'"
            shred -uv "$file"
            ;;
        darwin*)
            echo >&2 "+ rm -P '$file'"
            rm -P "$file"
            ;;
        *)
            echo >&2 "Unsupported \$OSTYPE: $OSTYPE"
            echo >&2 "You should manually shred '$file'"
            exit 8
            ;;
    esac
}

os_md5() {
    case $OSTYPE in
        linux-gnu)
            md5sum $* | cut -f 1 -d' '
            ;;
        darwin*)
            md5 -q $*
            ;;
        *)
            echo >&2 "Unsupported \$OSTYPE: $OSTYPE"
            exit 9
            ;;
    esac
}

editor="$EDITOR"

tmpfile="$(mktemp)" || exit 3

trap "os_shred '$tmpfile'" EXIT

dir="$(dirname "$0")"

echo>&2 "+ fetch-password $*"
"$dir/fetch-password" $* > "$tmpfile"

echo>&2 "+ fetch-password-recipients $*"
recip_ids="$("$dir/fetch-password-recipients" $*)"
recip_opts=''
for id in $recip_ids; do
    recip_opts="$recip_opts -r $id"
done

orig_md5="$(os_md5 "$tmpfile")"

echo>&2 "+ $editor '$tmpfile'"
$editor "$tmpfile"

post_md5="$(os_md5 "$tmpfile")"

# DEBUG
echo "pre:  $orig_md5"
echo "post: $post_md5"

if [ "$orig_md5" = "$post_md5" ]; then
    echo>&2 "No changes made."
    exit 0
fi

echo>&2 "+ add-password $recip_opts $*"
"$dir/add-password" $recip_opts $* < "$tmpfile"

